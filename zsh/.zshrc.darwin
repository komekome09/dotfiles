### zsh completion
fpath=($(brew --prefix)/share/zsh/site-functions $fpath)

### export ###
export TERM=xterm-256color
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/opt/llvm/bin:$PATH
export PATH=/Library/TeX/texbin:$PATH
export PATH=/opt:$PATH
export PATH=/usr/local/CrossPack-AVR/bin:$PATH
export PATH=/opt/local/bin:$PATH
export PATH=$PATH:$HOME/.gem/ruby/2.0.0/bin
export PATH=$PATH:$HOME/opt/review/bin
export PATH=$PATH:$HOME/opt/bin
export PATH=$PATH:$HOME/opt/scala-2.11.6/bin
export PATH=$PATH:$HOME/Applications/Electron.app/Contents/MacOS/
export PATH=$PATH:$HOME/opt/direnv-2.6.0
export PATH="$PATH:/Applications/Wine Staging.app/Contents/Resources/wine/bin"
export PATH="$PATH:$HOME/Library/Python/3.7/bin"
export PATH="$PATH:$HOME/.gem/ruby/2.6.0/bin"

### boost
export BOOST_ROOT=/usr/local/Cellar/boost/1.58.0

### alias
alias chkdev='ls /dev/ | grep usbserial'
alias ctags='/usr/local/Cellar/ctags/5.8_1/bin/ctags'

### go-lambda
if [[ -d $HOME/go-lambda ]]; then
    # tabtab source for serverless package
    # uninstall by removing these lines or running `tabtab uninstall serverless`
    [[ -f "$HOME/go-lambda/node_modules/tabtab/.completions/serverless.zsh" ]] && . "$HOME/go-lambda/node_modules/tabtab/.completions/serverless.zsh"
    # tabtab source for sls package
    # uninstall by removing these lines or running `tabtab uninstall sls`
    [[ -f "$HOME/go-lambda/node_modules/tabtab/.completions/sls.zsh" ]] && . "$HOME/go-lambda/node_modules/tabtab/.completions/sls.zsh"
fi

# The next line updates PATH for the Google Cloud SDK.
if [[ -d $HOME/google-cloud-sdk ]]; then
    export PATH="$PATH:$HOME/google-cloud-sdk/bin"
    [[ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]] && . "$HOME/google-cloud-sdk/path.zsh.inc"
    # The next line enables shell command completion for gcloud.
    [[ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]] && . "$HOME/google-cloud-sdk/completion.zsh.inc"
fi


### fuck command
function fuck () {
    TF_PYTHONIOENCODING=$PYTHONIOENCODING;
    export TF_SHELL=zsh;
    export TF_ALIAS=fuck;
    TF_SHELL_ALIASES=$(alias);
    export TF_SHELL_ALIASES;
    TF_HISTORY="$(fc -ln -10)";
    export TF_HISTORY;
    export PYTHONIOENCODING=utf-8;
    TF_CMD=$(
        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@
    ) && eval $TF_CMD;
    unset TF_HISTORY;
    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;
    test -n "$TF_CMD" && print -s $TF_CMD
}

if [[ -d $HOME/.nvm ]]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh" --no-use
    [ -s "/usr/local/opt/nvm/etc/bash_compilation.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_compilation.d/nvm"
fi
